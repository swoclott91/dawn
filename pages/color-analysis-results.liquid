{%- comment -%}
  Color Analysis Results Page
  Displays the results of the color analysis
{%- endcomment -%}

<div class="color-analysis-results">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">Your Color Analysis Results</h1>

    <div id="results-container" class="hidden">
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-semibold mb-4">Your Season</h2>
        <p id="season-result" class="text-xl"></p>
      </div>

      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-semibold mb-4">Your Color Palette</h2>
        <div id="color-palette" class="grid grid-cols-2 md:grid-cols-4 gap-4"></div>
      </div>

      <div class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-semibold mb-4">Recommendations</h2>
        <div id="recommendations" class="space-y-4"></div>
      </div>
    </div>

    <div id="no-results" class="text-center py-12">
      <p class="text-xl mb-4">No analysis results found.</p>
      <a
        href="/pages/color-analysis"
        class="inline-block bg-primary text-white px-6 py-3 rounded-lg hover:bg-primary-dark transition-colors"
      >
        Start Analysis
      </a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const resultsContainer = document.getElementById('results-container');
    const noResults = document.getElementById('no-results');
    const seasonResult = document.getElementById('season-result');
    const colorPalette = document.getElementById('color-palette');
    const recommendations = document.getElementById('recommendations');

    // Get the analysis results from localStorage
    const analysisResult = JSON.parse(localStorage.getItem('colorAnalysisResult'));

    if (analysisResult) {
      // Show results
      resultsContainer.classList.remove('hidden');
      noResults.classList.add('hidden');

      // Display season
      seasonResult.textContent = analysisResult.season;

      // Display color palette
      if (analysisResult.colors) {
        analysisResult.colors.forEach((color) => {
          const colorElement = document.createElement('div');
          colorElement.className = 'aspect-square rounded-lg shadow';
          colorElement.style.backgroundColor = color.hex;
          colorPalette.appendChild(colorElement);
        });
      }

      // Display recommendations
      if (analysisResult.recommendations) {
        analysisResult.recommendations.forEach((rec) => {
          const recElement = document.createElement('div');
          recElement.className = 'p-4 bg-gray-50 rounded-lg';
          recElement.innerHTML = `
            <h3 class="font-semibold mb-2">${rec.title}</h3>
            <p>${rec.description}</p>
          `;
          recommendations.appendChild(recElement);
        });
      }
    } else {
      // Show no results message
      resultsContainer.classList.add('hidden');
      noResults.classList.remove('hidden');
    }
  });
</script>
